#Область СлужебныйПрограммныйИнтерфейс

// @unit-test
Процедура HttpServiceGetInfobase(Фреймворк) Экспорт
	
	// given
	URL = "http://localhost/test/hs/infobase";
	
	// when
	Результат = HTTPConnector.Get(URL);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, """config_version"":");
	Фреймворк.ПроверитьВхождение(ТелоОтвета, Метаданные.Версия);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, """config_version"":");
	Фреймворк.ПроверитьВхождение(ТелоОтвета, """File=");
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUploadError400BadRequest(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/upload";
	Тело = "";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Length", 0);
	Заголовки.Вставить("token", "token");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 400);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitchError400BadRequestEmptyValue(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/switch";
	Тело = "";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 400);
	
КонецПроцедуры


// @unit-test
Процедура HttpServicePostSwitchError400BadRequestBadValue(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/switch";
	Тело = "";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("value", "true");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 400);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUploadError401Unauthorized(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/upload";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "fake");
	Заголовки.Вставить("name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 401);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitchError401Unauthorized(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/switch";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "fake");
	Заголовки.Вставить("value", "on");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);

	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 401);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUploadError403Forbidden(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/upload";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 403);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitchError403Forbidden(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/switch";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("value", "on");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);

	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 403);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUploadError423Locked(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/upload";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 423);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUpload200Ok(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/upload";
	Тело = "{""type"":""test""}";
	
	СООБЩЕНИЕ_ОБРАБОТКИ_НЕ_НАЙДЕНЫ = НСтр( "ru = 'внешние обработки не найдены';
											|en = 'no external data processors found'" );
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, СООБЩЕНИЕ_ОБРАБОТКИ_НЕ_НАЙДЕНЫ);

КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitch200Enabled(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/switch";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("value", "on");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, "", Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, "загрузка файлов включена");

КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitch200Disabled(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Установить( "token" );
	
	URL = "http://localhost/test/hs/epf";
	URL = URL + "/switch";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("token", "token");
	Заголовки.Вставить("value", "off");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, "", Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, "загрузка файлов отключена");

КонецПроцедуры

#КонецОбласти