#Область СлужебныйПрограммныйИнтерфейс

// @unit-test
Процедура HttpServiceGetVersion(Фреймворк) Экспорт
	
	// given
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/version";
	
	// when
	Результат = HTTPConnector.Get(URL);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, """type"": ""info""");
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUpdateError400BadRequest(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/update";
	Тело = "";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Length", 0);
	Заголовки.Вставить("Token", "token");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 400);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitchError400BadRequest(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/switch";
	Тело = "";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 400);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUpdateError401Unauthorized(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/update";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "fake");
	Заголовки.Вставить("Name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 401);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitchError401Unauthorized(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/switch";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "fake");
	Заголовки.Вставить("Value", "true");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);

	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 401);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUpdateError403Forbidden(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/update";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Заголовки.Вставить("Name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 403);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitchError403Forbidden(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/switch";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Заголовки.Вставить("Value", "true");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);

	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 403);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUpdateError423Locked(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/update";
	Тело = "{}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Заголовки.Вставить("Name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 423);
	
КонецПроцедуры

// @unit-test
Процедура HttpServicePostUpdate200Ok(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/update";
	Тело = "{""type"": ""test""}";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Заголовки.Вставить("Name", "%D0%B8%D0%BC%D1%8F%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, Тело, Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, """type"": ""info""");

КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitch200Enabled(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Ложь );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/switch";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Заголовки.Вставить("Value", "true");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, "", Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, "Включено");

КонецПроцедуры

// @unit-test
Процедура HttpServicePostSwitch200Disabled(Фреймворк) Экспорт
	
	// given
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить( Истина );
	Константы.AccessTokenВнешнееХранилищеОтчетовИОбработок.Установить( "token" );
	
	URL = "http://localhost/test/hs/gitlab";
	URL = URL + "/switch";
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Token", "token");
	Заголовки.Вставить("Value", "false");
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Заголовки", Заголовки);
	Дополнительно.Вставить("Таймаут", 5);
	
	// when
	Результат = HTTPConnector.Post(URL, "", Дополнительно);

	// then
	Фреймворк.ПроверитьРавенство(Результат.КодСостояния, 200);
	ТелоОтвета = HTTPConnector.КакТекст(Результат, КодировкаТекста.UTF8);
	Фреймворк.ПроверитьВхождение(ТелоОтвета, "Отключено");

КонецПроцедуры

#КонецОбласти