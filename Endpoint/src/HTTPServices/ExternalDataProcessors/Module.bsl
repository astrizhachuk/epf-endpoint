#Область СлужебныеПроцедурыИФункции

#Область Методы

Функция PostUpload( Запрос )
	
	Перем ИмяФайла;
	Перем Данные;
	Перем Результат;
	Перем Ответ;

	Ответ = Новый HTTPСервисОтвет( НайтиКодСостоянияОтвета("OK") );
	
	ПроверитьЗапрос( Запрос, Ответ );

	Если ( КодыСостоянияHTTPКлиентСерверПовтИсп.IsOk(Ответ.КодСостояния) ) Тогда
		
		ИмяФайла = РаскодироватьСтроку( Запрос.Заголовки.Получить("name"), СпособКодированияСтроки.КодировкаURL );
		Данные = Запрос.ПолучитьТелоКакДвоичныеДанные();
		Результат = ВнешниеОтчетыИОбработки.ЗаменитьФайлВИнформационнойБазе( ИмяФайла, Данные );
		HTTPServices.SetBodyAsJSON( Ответ, Результат );
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция PostSwitch( Запрос )
	
	Перем Значение;
	Перем Результат;
	Перем Ответ;

	Ответ = Новый HTTPСервисОтвет( НайтиКодСостоянияОтвета("OK") );
	
	ПроверитьЗапрос( Запрос, Ответ );
	
	Если ( КодыСостоянияHTTPКлиентСерверПовтИсп.IsOk(Ответ.КодСостояния) ) Тогда
		
		Значение = Запрос.Заголовки.Получить("value");
		Значение = ?(Значение = "on", Истина, Ложь);
		Результат = ВнешниеОтчетыИОбработки.УстановитьЗагружатьФайлыИзВнешнегоХранилища( Значение );
		HTTPServices.SetBodyAsJSON( Ответ, Результат );
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

Функция Представление()
	
	Возврат Метаданные.HTTPСервисы.ExternalDataProcessors.Представление();
	
КонецФункции

Процедура ДобавитьИнформациюВЖурналРегистрации( Знач ТекстСообщения )
	
	ЗаписьЖурналаРегистрации( Представление(), УровеньЖурналаРегистрации.Информация, , , ТекстСообщения );
	
КонецПроцедуры

Процедура СформироватьОтветНаОшибочныйЗаголовок( Ответ, Знач Заголовок )
	
	Перем ТекстСообщения;
	
	Ответ = Новый HTTPСервисОтвет( НайтиКодСостоянияОтвета("BAD_REQUEST") );

	ТекстСообщения = НСтр(
		"ru = 'ошибка в заголовке: %1';
		|en = 'header error: %1'" );
		
		ТекстСообщения = СтрШаблон( ТекстСообщения, Заголовок);

		ДобавитьИнформациюВЖурналРегистрации( ТекстСообщения );
		
КонецПроцедуры

Функция НайтиКодСостоянияОтвета( Знач Идентификатор )
	
	Возврат КодыСостоянияHTTPКлиентСерверПовтИсп.НайтиКодПоИдентификатору( Идентификатор );
	
КонецФункции

#Область Проверки

Процедура ПроверитьИмяФайла( Знач Запрос, Ответ )
	
	Перем Имя;
	
	Имя = Запрос.Заголовки.Получить( "name" );
	
	Если ( Имя = Неопределено ИЛИ Имя = "" ) Тогда
	
		СформироватьОтветНаОшибочныйЗаголовок( Ответ, "name" );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗначение( Знач Запрос, Ответ )
	
	Перем Значение;
	
	Значение = Запрос.Заголовки.Получить( "value" );
	
	Если ( Значение = Неопределено ИЛИ НЕ (Значение = "on" ИЛИ Значение = "off") ) Тогда
	
		СформироватьОтветНаОшибочныйЗаголовок( Ответ, "value" );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьОбязательныеЗаголовки( Знач Запрос, Ответ )

	Если (Запрос.ОтносительныйURL = "/upload") Тогда
	
		ПроверитьИмяФайла( Запрос, Ответ );
		
	Иначе
		
		ПроверитьЗначение( Запрос, Ответ );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗапрос( Знач Запрос, Ответ )
	
	ПроверитьОбязательныеЗаголовки( Запрос, Ответ );
	ПроверитьТокенДоступа( Запрос, Ответ );
	
	Если (Запрос.ОтносительныйURL = "/upload") Тогда
		
		ПроверитьДоступностьЗагрузкиФайлов( Ответ );
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьТокенДоступа( Знач Запрос, Ответ )
	
	Перем ТокенДоступаИзБазы;
	Перем ТокенДоступаИзЗапроса;
	
	СООБЩЕНИЕ_НЕТ_ТОКЕНА = НСтр( "ru = 'не установлен токен доступа';en = 'access token not set'" );
	СООБЩЕНИЕ_НЕТ_АУТЕНТИФИКАЦИИ = НСтр( "ru = 'аутентификация не пройдена';en = 'not authorized'" );
	
	Если ( НЕ КодыСостоянияHTTPКлиентСерверПовтИсп.IsOk(Ответ.КодСостояния) ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТокенДоступаИзБазы = Константы.ТокенДоступаЗагрузкиФайловИзВнешнегоХранилища.Получить();
	
	Если ( НЕ ЗначениеЗаполнено(ТокенДоступаИзБазы) ) Тогда
		
		Ответ = Новый HTTPСервисОтвет( НайтиКодСостоянияОтвета("FORBIDDEN") );
		ДобавитьИнформациюВЖурналРегистрации( СООБЩЕНИЕ_НЕТ_ТОКЕНА );
		
		Возврат;
		
	КонецЕсли;
	
	ТокенДоступаИзЗапроса = Запрос.Заголовки.Получить("token");
	
	Если ( ТокенДоступаИзЗапроса = Неопределено ИЛИ ТокенДоступаИзБазы <> ТокенДоступаИзЗапроса ) Тогда
		
		Ответ = Новый HTTPСервисОтвет( НайтиКодСостоянияОтвета("UNAUTHORIZED") );
		ДобавитьИнформациюВЖурналРегистрации( СООБЩЕНИЕ_НЕТ_АУТЕНТИФИКАЦИИ );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДоступностьЗагрузкиФайлов( Ответ )
	
	СООБЩЕНИЕ_ОТКЛЮЧЕНА_ЗАГРУЗКА = НСтр( "ru = 'не включена загрузка файлов';en = 'file upload is disabled'" );
	
	Если ( НЕ КодыСостоянияHTTPКлиентСерверПовтИсп.IsOk(Ответ.КодСостояния) ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ( НЕ Константы.ЗагружатьФайлыИзВнешнегоХранилища.Получить() ) Тогда
		
		Ответ = Новый HTTPСервисОтвет( НайтиКодСостоянияОтвета("LOCKED") );
		Ответ.Причина = "file upload is disabled";
		ДобавитьИнформациюВЖурналРегистрации( СООБЩЕНИЕ_ОТКЛЮЧЕНА_ЗАГРУЗКА );
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти